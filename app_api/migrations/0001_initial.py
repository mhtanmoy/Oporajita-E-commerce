# Generated by Django 3.2.7 on 2022-06-15 15:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory_api', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacebookPixel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook_pixel_link', models.TextField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoogleAD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_ads_link', models.TextField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoogleAnalytic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_analytics_link', models.TextField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LiveChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live_chat_link', models.TextField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='external_application/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='external_application/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='external_application/')),
                ('popup_enable', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderPlacedFacebookPixel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_placed_facebook_pixel_link', models.TextField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Popup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='external_application/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='external_application/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='external_application/')),
                ('popup_enable', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_limit', models.BooleanField(default=True)),
                ('limit', models.PositiveBigIntegerField(blank=True, null=True)),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField(blank=True, null=True)),
                ('expire_limit', models.BooleanField(default=False)),
                ('discount_type', models.CharField(blank=True, choices=[('PERCENTAGE', 'Percentage'), ('AMOUNT', 'Fixed Amount')], default='PERCENTAGE', max_length=20, null=True)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount_order_type', models.CharField(blank=True, choices=[('ALL_ORDERS', 'All Orders'), ('ORDERS_OVER', 'Orders Over'), ('COLLECTIONS', 'Collections'), ('PRODUCTS', 'Products'), ('FIRST_ORDER', 'First Order')], default='ALL_ORDERS', max_length=30, null=True)),
                ('orders_over', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('apply', models.CharField(blank=True, choices=[('ON_ALL_APPLICABLE_ITEMS_IN_THE_ORDER', 'On all applicable items in the order'), ('ONCE_PER_ORDER', 'Once per order for an item')], default='ONCE_PER_ORDER', max_length=80, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('collection', models.ManyToManyField(blank=True, related_name='collections_promo_codes', to='inventory_api.ProductCategory')),
                ('product', models.ManyToManyField(blank=True, related_name='products_promo_codes', to='inventory_api.Product')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
    ]
