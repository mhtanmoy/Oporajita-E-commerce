# Generated by Django 3.2.7 on 2022-06-15 15:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('settings_api', '__first__'),
        ('customer_profile_api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('icon_image', stdimage.models.StdImageField(blank=True, null=True, upload_to='images/brand_images/')),
                ('icon_image2', stdimage.models.StdImageField(blank=True, null=True, upload_to='images/brand_images/')),
                ('slug', models.SlugField(blank=True, max_length=250, null=True, unique=True)),
                ('meta_title', models.CharField(blank=True, max_length=100, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory_location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=150)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=True)),
                ('address1', models.CharField(blank=True, max_length=120, null=True)),
                ('address2', models.CharField(blank=True, max_length=120, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('awaiting_stock', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('stock', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('on_hand', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('committed', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('available', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('sku', models.CharField(blank=True, max_length=100, null=True)),
                ('barcode', models.CharField(blank=True, max_length=250, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_display', models.BooleanField(default=True)),
                ('is_expanded', models.BooleanField(default=False)),
                ('is_selected', models.BooleanField(default=False)),
                ('option_values', models.CharField(blank=True, max_length=50, null=True)),
                ('options', models.CharField(blank=True, max_length=50, null=True)),
                ('enable_customer_note', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=True)),
                ('is_new', models.BooleanField(default=False)),
                ('store_only', models.BooleanField(default=False)),
                ('stock_control', models.BooleanField(default=True)),
                ('is_require_documents', models.BooleanField(default=False)),
                ('featured_image', stdimage.models.StdImageField(blank=True, null=True, upload_to='images/product_images/')),
                ('product_image1', stdimage.models.StdImageField(blank=True, null=True, upload_to='images/product_images/')),
                ('product_image2', stdimage.models.StdImageField(blank=True, null=True, upload_to='images/product_images/')),
                ('product_image3', stdimage.models.StdImageField(blank=True, null=True, upload_to='images/product_images/')),
                ('advance_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('auto_adjust_selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('compare_at_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('unit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('on_sale', models.BooleanField(blank=True, default=False, null=True)),
                ('tags', models.CharField(blank=True, max_length=100, null=True)),
                ('call_for_price', models.BooleanField(default=False)),
                ('attribute', models.CharField(blank=True, max_length=50, null=True)),
                ('attribute2', models.CharField(blank=True, max_length=50, null=True)),
                ('attribute3', models.CharField(blank=True, max_length=50, null=True)),
                ('attribute4', models.CharField(blank=True, max_length=50, null=True)),
                ('attribute5', models.CharField(blank=True, max_length=50, null=True)),
                ('attribute6', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery_info', models.TextField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=100, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True, unique=True)),
                ('value', models.CharField(blank=True, max_length=50, null=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_brand', to='inventory_api.brand')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='New Category', max_length=150)),
                ('descriptions', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('meta_title', models.CharField(blank=True, max_length=100, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=100, null=True)),
                ('icon', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductPurchased',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('adjusment', models.IntegerField(blank=True, default=0, null=True)),
                ('due_date', models.DateField()),
                ('po_number', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_date', models.DateField()),
                ('received_note', models.TextField(blank=True, null=True)),
                ('received_quantity_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('reference', models.CharField(blank=True, max_length=500, null=True)),
                ('order_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_due', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(blank=True, choices=[('DRAFT', 'Draft'), ('OPEN', 'Open'), ('RECEIVED', 'Received'), ('PARTIALLY_RECEIVED', 'Partially Received'), ('CLOSED', 'Closed')], max_length=20, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('supplier_name', models.CharField(max_length=50)),
                ('supplier_company_name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=False)),
                ('supplier_first_name', models.CharField(max_length=50)),
                ('supplier_last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('supplier_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('supplier_address', models.CharField(blank=True, max_length=120, null=True)),
                ('supplier_address2', models.CharField(blank=True, max_length=120, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_tax_rate', to='settings_api.taxrate')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSizeVariant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('awaiting_stock', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('stock', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('on_hand', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('committed', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('available', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('option', models.CharField(blank=True, max_length=50, null=True)),
                ('value', models.CharField(blank=True, max_length=50, null=True)),
                ('options', models.CharField(blank=True, max_length=50, null=True)),
                ('sku', models.CharField(blank=True, max_length=100, null=True)),
                ('barcode', models.CharField(blank=True, max_length=250, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('on_sale', models.BooleanField(blank=True, default=False, null=True)),
                ('tags', models.CharField(blank=True, max_length=100, null=True)),
                ('advance_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('auto_adjust_selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('compare_at_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_selected', models.BooleanField(default=False)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variant', to='inventory_api.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductPurchasedPayment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('CASH', 'Cash'), ('CHEQUE', 'Cheque'), ('BANK_TRANSFER', 'Bank Transfer'), ('MOBILE_TRANSFER', 'Mobile Transfer')], max_length=50, null=True)),
                ('reference', models.CharField(blank=True, max_length=500, null=True)),
                ('due', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('purchased', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_purchased_payment', to='inventory_api.productpurchased')),
            ],
        ),
        migrations.CreateModel(
            name='ProductPurchasedItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_quantity', models.IntegerField(blank=True, null=True)),
                ('received_quantity', models.IntegerField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=50, null=True)),
                ('subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_received_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('inventory_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_purchased_item_inventory_location', to='inventory_api.inventory_location')),
                ('purchase_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_purchased_item', to='inventory_api.productpurchased')),
                ('purchased_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_purchased', to='inventory_api.product')),
                ('purchased_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_purchased_item_variant', to='inventory_api.productsizevariant')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_purchased_item_tax', to='settings_api.taxrate')),
            ],
        ),
        migrations.AddField(
            model_name='productpurchased',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_purchased_supplier', to='inventory_api.supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_category', to='inventory_api.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='tax',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_tax_rate', to='settings_api.taxrate'),
        ),
        migrations.CreateModel(
            name='Inventory_transfer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('TO_number', models.CharField(blank=True, editable=False, max_length=50, unique=True)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('SENT', 'Sent'), ('PARTIALLY_RECEIVED', 'Partially Received'), ('RECEIVED', 'Received')], default='OPEN', max_length=20)),
                ('total_transfer', models.IntegerField(blank=True, null=True)),
                ('total_receive', models.IntegerField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('transfer_quantity', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('from_inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_inventory', to='inventory_api.inventory_location')),
                ('to_inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_inventory', to='inventory_api.inventory_location')),
                ('transfer_item', models.ManyToManyField(blank=True, related_name='transfer_item', to='inventory_api.ProductSizeVariant')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerMessage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('message', models.TextField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_message', to='customer_profile_api.customerprofile')),
            ],
        ),
    ]
